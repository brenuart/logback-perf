# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j1File

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 783.000 ops/ms
Iteration   1: 776.057 ops/ms
Iteration   2: 786.175 ops/ms
Iteration   3: 774.612 ops/ms
Iteration   4: 784.400 ops/ms
Iteration   5: 774.761 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j1File":
  779.201 ±(99.9%) 21.640 ops/ms [Average]
  (min, avg, max) = (774.612, 779.201, 786.175), stdev = 5.620
  CI (99.9%): [757.561, 800.840] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile

# Run progress: 16.67% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 751.208 ops/ms
Iteration   1: 802.770 ops/ms
Iteration   2: 849.813 ops/ms
Iteration   3: 720.960 ops/ms
Iteration   4: 767.950 ops/ms
Iteration   5: 656.766 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile":
  759.652 ±(99.9%) 286.476 ops/ms [Average]
  (min, avg, max) = (656.766, 759.652, 849.813), stdev = 74.397
  CI (99.9%): [473.176, 1046.128] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile

# Run progress: 33.33% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 607.560 ops/ms
Iteration   1: 671.308 ops/ms
Iteration   2: 664.038 ops/ms
Iteration   3: 601.043 ops/ms
Iteration   4: 675.924 ops/ms
Iteration   5: 755.810 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile":
  673.625 ±(99.9%) 212.005 ops/ms [Average]
  (min, avg, max) = (601.043, 673.625, 755.810), stdev = 55.057
  CI (99.9%): [461.619, 885.630] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j1File

# Run progress: 50.00% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: 667.025 ops/ms
Iteration   1: 670.491 ops/ms
Iteration   2: 665.905 ops/ms
Iteration   3: 652.880 ops/ms
Iteration   4: 580.159 ops/ms
Iteration   5: 586.554 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j1File":
  631.198 ±(99.9%) 170.221 ops/ms [Average]
  (min, avg, max) = (580.159, 631.198, 670.491), stdev = 44.206
  CI (99.9%): [460.977, 801.419] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j2File

# Run progress: 66.67% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 779.851 ops/ms
Iteration   1: 764.881 ops/ms
Iteration   2: 811.159 ops/ms
Iteration   3: 657.894 ops/ms
Iteration   4: 724.272 ops/ms
Iteration   5: 808.254 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j2File":
  753.292 ±(99.9%) 246.913 ops/ms [Average]
  (min, avg, max) = (657.894, 753.292, 811.159), stdev = 64.122
  CI (99.9%): [506.379, 1000.204] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 64 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.logbackFile

# Run progress: 83.33% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 896.992 ops/ms
Iteration   1: 993.535 ops/ms
Iteration   2: 981.114 ops/ms
Iteration   3: 1067.873 ops/ms
Iteration   4: 969.625 ops/ms
Iteration   5: 1000.627 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.logbackFile":
  1002.555 ±(99.9%) 147.833 ops/ms [Average]
  (min, avg, max) = (969.625, 1002.555, 1067.873), stdev = 38.392
  CI (99.9%): [854.722, 1150.388] (assumes normal distribution)


# Run complete. Total time: 00:03:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt     Score     Error   Units
AsyncWithFileAppenderBenchmark.log4j1File       thrpt    5   779.201 ±  21.640  ops/ms
AsyncWithFileAppenderBenchmark.log4j2AsyncFile  thrpt    5   759.652 ± 286.476  ops/ms
AsyncWithFileAppenderBenchmark.logbackFile      thrpt    5   673.625 ± 212.005  ops/ms
FileAppenderBenchmark.log4j1File                thrpt    5   631.198 ± 170.221  ops/ms
FileAppenderBenchmark.log4j2File                thrpt    5   753.292 ± 246.913  ops/ms
FileAppenderBenchmark.logbackFile               thrpt    5  1002.555 ± 147.833  ops/ms
