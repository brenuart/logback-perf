# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j1File

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 547.348 ops/ms
Iteration   1: 709.932 ops/ms
Iteration   2: 714.869 ops/ms
Iteration   3: 770.297 ops/ms
Iteration   4: 588.279 ops/ms
Iteration   5: 531.277 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j1File":
  662.931 ±(99.9%) 381.874 ops/ms [Average]
  (min, avg, max) = (531.277, 662.931, 770.297), stdev = 99.171
  CI (99.9%): [281.057, 1044.805] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile

# Run progress: 16.67% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 846.905 ops/ms
Iteration   1: 909.715 ops/ms
Iteration   2: 881.823 ops/ms
Iteration   3: 924.904 ops/ms
Iteration   4: 857.643 ops/ms
Iteration   5: 879.254 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile":
  890.668 ±(99.9%) 102.496 ops/ms [Average]
  (min, avg, max) = (857.643, 890.668, 924.904), stdev = 26.618
  CI (99.9%): [788.172, 993.164] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile

# Run progress: 33.33% complete, ETA 00:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 1225.704 ops/ms
Iteration   1: 1194.030 ops/ms
Iteration   2: 1065.590 ops/ms
Iteration   3: 1084.340 ops/ms
Iteration   4: 1174.538 ops/ms
Iteration   5: 1230.903 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile":
  1149.880 ±(99.9%) 275.814 ops/ms [Average]
  (min, avg, max) = (1065.590, 1149.880, 1230.903), stdev = 71.628
  CI (99.9%): [874.066, 1425.694] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j1File

# Run progress: 50.00% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 725.206 ops/ms
Iteration   1: 729.375 ops/ms
Iteration   2: 697.010 ops/ms
Iteration   3: 701.533 ops/ms
Iteration   4: 702.633 ops/ms
Iteration   5: 721.270 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j1File":
  710.364 ±(99.9%) 54.334 ops/ms [Average]
  (min, avg, max) = (697.010, 710.364, 729.375), stdev = 14.110
  CI (99.9%): [656.030, 764.699] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j2File

# Run progress: 66.67% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 1051.983 ops/ms
Iteration   1: 1054.588 ops/ms
Iteration   2: 1069.495 ops/ms
Iteration   3: 1100.111 ops/ms
Iteration   4: 1090.470 ops/ms
Iteration   5: 1081.918 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j2File":
  1079.316 ±(99.9%) 68.655 ops/ms [Average]
  (min, avg, max) = (1054.588, 1079.316, 1100.111), stdev = 17.830
  CI (99.9%): [1010.661, 1147.972] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 16.0.2, Java HotSpot(TM) 64-Bit Server VM, 16.0.2+7-67
# VM invoker: /home/ceki/java/jdk-16.0.2/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 4 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.logbackFile

# Run progress: 83.33% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 1222.565 ops/ms
Iteration   1: 1228.159 ops/ms
Iteration   2: 1213.916 ops/ms
Iteration   3: 1207.499 ops/ms
Iteration   4: 1201.857 ops/ms
Iteration   5: 1209.370 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.logbackFile":
  1212.160 ±(99.9%) 38.251 ops/ms [Average]
  (min, avg, max) = (1201.857, 1212.160, 1228.159), stdev = 9.934
  CI (99.9%): [1173.909, 1250.411] (assumes normal distribution)


# Run complete. Total time: 00:03:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt     Score     Error   Units
AsyncWithFileAppenderBenchmark.log4j1File       thrpt    5   662.931 ± 381.874  ops/ms
AsyncWithFileAppenderBenchmark.log4j2AsyncFile  thrpt    5   890.668 ± 102.496  ops/ms
AsyncWithFileAppenderBenchmark.logbackFile      thrpt    5  1149.880 ± 275.814  ops/ms
FileAppenderBenchmark.log4j1File                thrpt    5   710.364 ±  54.334  ops/ms
FileAppenderBenchmark.log4j2File                thrpt    5  1079.316 ±  68.655  ops/ms
FileAppenderBenchmark.logbackFile               thrpt    5  1212.160 ±  38.251  ops/ms
